{"version":3,"sources":["assets/logo.svg","assets/background.svg","pages/Dashboard/styles.ts","services/api.ts","pages/Dashboard/index.tsx","pages/Repository/styles.ts","pages/Repository/index.tsx","routes/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["module","exports","Title","styled","h1","SearchForm","form","props","hasError","shade","Repositories","div","Error","api","axios","create","baseURL","Dashboard","useState","errorMessage","setErrorMessage","newRepo","setNewRepo","storagedRepositories","localStorage","getItem","JSON","parse","repositories","setRepositories","event","a","preventDefault","get","repository","data","useEffect","setItem","stringify","src","logoImage","alt","onSubmit","value","onChange","e","target","className","type","placeholder","size","map","key","owner","avatar_url","to","full_name","login","description","Header","header","RepositoryInfo","section","RepositoryIssues","Repository","params","useRouteMatch","setRepository","issues","setIssues","then","response","stargazers_count","forks_count","open_issues_count","issue","id","href","html_url","rel","title","user","Routes","path","exact","component","GlobalStyles","createGlobalStyle","appBackground","App","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e114498.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.0b819d63.svg\";","import styled from 'styled-components'\nimport { shade } from 'polished'\n\ninterface SearchFormProps {\n  hasError: boolean\n}\n\nexport const Title = styled.h1`\n  font-size: 3rem;\n  max-width: 32rem;\n  line-height: 3.5rem;\n  margin-top: 5rem;\n`\nexport const SearchForm = styled.form<SearchFormProps>`\n  margin-top: 3.5rem;\n  max-width: 45rem;\n  display: flex;\n  .search-form {\n\n    &__input, &__button {\n      height: 4.5rem;\n    }\n\n    &__input {\n      flex: 1;\n      padding: 0 1.5rem;\n      border-radius: .25rem 0 0 .25rem;\n      border: solid 2px ${props => props.hasError ? '#c53030' : '#fff'};\n      border-right: 0;\n\n\n\n      &:placeholder {\n        color: #a8a8b3\n      }\n    }\n\n    &__button {\n      width: 14rem;\n      color: #fff;\n      background: #04d361;\n      border-radius: 0 .25rem .25rem 0;\n      font-weight: bold;\n\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      transition: background-color .2s;\n\n      /* search icon */\n      svg {\n        margin-left: 1rem;\n      }\n\n      &:hover {\n        background: ${shade(0.2, '#04d361')}\n      }\n    }\n  }\n`\n\nexport const Repositories = styled.div`\n\n  a {\n    color: inherit;\n    text-decoration: inherit;\n  }\n\n  .repository {\n    margin-top: 5rem;\n    max-width: 45rem;\n    background: #fff;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    border-radius: .25rem;\n    padding: 1.5rem;\n    transition: transform .2s;\n\n    & + .repository {\n      margin-top: 1rem;\n    }\n\n    &:hover {\n      transform: translateX(.75rem);\n    }\n\n    &__content {\n      flex: 1;\n      margin: 0 1rem;\n    }\n\n    &__image {\n      border-radius: 50%;\n      width: 4rem;\n      height: 4rem;\n      margin-right: 1rem;\n    }\n\n    &__name {\n      font-size: 1.125rem;\n      margin-bottom: 0.25rem;\n      display: block;\n    }\n\n    &__description {\n      color: #a8a8b3;\n    }\n\n    &__icon {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n\n`\nexport const Error = styled.div`\n  color: #c53030;\n  margin-top: .25rem;\n  font-size: .75rem;\n`\n","import axios from 'axios'\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com/'\n})\n\nexport default api\n","import React, { useState, FormEvent, useEffect } from 'react';\nimport { Link } from 'react-router-dom'\nimport { FiChevronRight, FiSearch } from 'react-icons/fi';\nimport { Title, SearchForm, Repositories, Error } from './styles';\nimport logoImage from '../../assets/logo.svg'\n\nimport api from '../../services/api'\n\ninterface Repository {\n  full_name: string\n  description: string\n  owner: {\n    login: string\n    avatar_url: string\n  }\n}\n\nconst Dashboard: React.FC = () => {\n\n  let [errorMessage, setErrorMessage] = useState('')\n\n  let [newRepo, setNewRepo] = useState('')\n\n  let [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storagedRepositories = localStorage.getItem(\n      '@GithubExplorer:repositories'\n    )\n\n    return storagedRepositories\n      ? JSON.parse(storagedRepositories)\n      : []\n  })\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@GithubExplorer:repositories',\n      JSON.stringify(repositories)\n    )\n  }, [repositories])\n\n  async function handleAddRepository(event: FormEvent<HTMLFormElement>) {\n    event.preventDefault()\n\n    try {\n      if (!newRepo) {\n        setErrorMessage('Digite o autor/nome do reposit처rio')\n        return\n      }\n\n      let { data: repository } = await api.get<Repository>(`repos/${newRepo}`)\n\n      setRepositories([...repositories, repository])\n\n      setNewRepo('')\n\n      setErrorMessage('')\n\n    } catch {\n      setErrorMessage(`Repositorio \"${newRepo}\" n찾o encontrado`)\n    }\n  }\n\n  return (\n    <>\n      <img src={logoImage} alt=\"Github Explorer\" />\n      <Title> Explore Reposit처rios no Github </Title>\n      <SearchForm hasError={!!errorMessage} onSubmit={handleAddRepository}>\n        <input\n          value={newRepo}\n          onChange={e => setNewRepo(e.target.value)}\n          className=\"search-form__input\"\n          type=\"text\"\n          placeholder=\"Digite aqui nome do reposit처rio no formato autor/nome...\"\n        />\n        <button className=\"search-form__button\">\n          <span>Pesquisar</span>\n          <FiSearch size=\"20\" />\n        </button>\n      </SearchForm>\n\n      {errorMessage &&\n        <Error>\n          {errorMessage}\n        </Error>\n      }\n\n      <Repositories>\n        {repositories.map((repository) => (\n          <Link\n            key={repository.owner.avatar_url}\n            className=\"repository\"\n            to={`repositories/${repository.full_name}`}\n          >\n            <img\n              className=\"repository__image\"\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div className=\"repository__content\">\n              <strong className=\"repository__name\">\n                {repository.full_name}\n              </strong>\n              <p className=\"repository__description\">\n                {repository.description}\n              </p>\n            </div>\n            <FiChevronRight size=\"20\" className=\"repository__icon\" />\n          </Link>\n        ))}\n      </Repositories>\n    </>\n  )\n}\n\nexport default Dashboard\n","import styled from 'styled-components'\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  .header {\n    &__back-button {\n      display: flex;\n      align-items: center;\n      text-decoration: none;\n      color: #a8a8b3;\n      transition: color .2s;\n\n      &:hover {\n        color: #666;\n      }\n\n      svg {\n        margin-left: .25rem;\n      }\n    }\n  }\n`\n\n\nexport const RepositoryInfo = styled.section`\n  margin-top: 5rem;\n\n\n  .header {\n    display: flex;\n    align-items: center;\n\n    &__content {\n      margin-left: 24px;\n    }\n  }\n\n  .repository {\n    &__image {\n      height: 7.5rem;\n      width: 7.5rem;\n      border-radius: 50%;\n    }\n\n    &__title {\n      font-size: 2.25rem;\n      color: #3d3d4d;\n    }\n\n    &__description {\n      font-size: 1.125rem;\n      margin-top: .25rem;\n      color: #737380;\n    }\n\n    &__stats {\n      display: flex;\n      list-style: none;\n      margin-top: 2.5rem;\n\n      &-item {\n        & + .repository__stats-item {\n          margin-left: 5rem;\n        }\n\n        strong {\n          display: block;\n          font-size: 2.25rem;\n          color: #3d3d4d;\n        }\n\n        span {\n          display: block;\n          margin-top: .25rem;\n          color: #6c6c80;\n        }\n      }\n    }\n  }\n`\nexport const RepositoryIssues = styled.div`\n\n  a {\n    color: inherit;\n    text-decoration: inherit;\n  }\n\n  .issue {\n    margin-top: 5rem;\n    max-width: 45rem;\n    background: #fff;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    border-radius: .25rem;\n    padding: 1.5rem;\n    transition: transform .2s;\n\n    & + .issue {\n      margin-top: 1rem;\n    }\n\n    &:hover {\n      transform: translateX(.75rem);\n    }\n\n    &__content {\n      flex: 1;\n      margin: 0 1rem;\n    }\n\n    &__title {\n      font-size: 1.125rem;\n      margin-bottom: 0.25rem;\n      display: block;\n    }\n\n    &__description {\n      color: #a8a8b3;\n    }\n\n    &__icon {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n`\n","import React, { useState, useEffect } from 'react';\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { FiChevronLeft, FiChevronRight } from 'react-icons/fi'\nimport { Header, RepositoryInfo, RepositoryIssues } from './styles'\nimport api from '../../services/api'\nimport logoImage from '../../assets/logo.svg'\n\ninterface RepositoryParams {\n  repository: string;\n}\n\ninterface Repository {\n  full_name: string\n  description: string\n  stargazers_count: number\n  forks_count: number\n  open_issues_count: number\n  owner: {\n    login: string\n    avatar_url: string\n  }\n}\n\ninterface Issue {\n  id: number\n  title: string\n  html_url: string\n  user: {\n    login: string\n  }\n}\n\nconst Repository: React.FC = () => {\n  const { params } = useRouteMatch<RepositoryParams>()\n\n  const [repository, setRepository] = useState<Repository | null>(null)\n\n  const [issues, setIssues] = useState<Issue[]>([])\n\n\n  useEffect(() => {\n    api.get<Repository>(`repos/${params.repository}`).then(\n      response => {\n        setRepository(response.data)\n      }\n    )\n\n    api.get<Issue[]>(`repos/${params.repository}/issues`).then(\n      response => {\n        setIssues(response.data)\n      }\n    )\n\n  }, [params.repository])\n\n  return (\n    <>\n      <Header>\n        <img\n          src={logoImage}\n          alt=\"Github Explorer\"\n        />\n        <Link to=\"/\" className=\"header__back-button\">\n          <FiChevronLeft size={16} />\n          Voltar\n        </Link>\n      </Header>\n\n      {repository && (\n        <RepositoryInfo>\n          <header className=\"header\">\n            <img\n              className=\"repository__image\"\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div className=\"header__content\">\n              <strong className=\"repository__title\">\n                {repository.full_name}\n              </strong>\n              <p className=\"repository__description\">\n                {repository.description}\n              </p>\n            </div>\n          </header>\n          <ul className=\"repository__stats\">\n            <li className=\"repository__stats-item\">\n              <strong>\n                {repository.stargazers_count}\n              </strong>\n              <span>\n                Stars\n            </span>\n            </li>\n            <li className=\"repository__stats-item\">\n              <strong>\n                {repository.forks_count}\n              </strong>\n              <span>\n                forks\n            </span>\n            </li>\n            <li className=\"repository__stats-item\">\n              <strong>\n                {repository.open_issues_count}\n              </strong>\n              <span>\n                Issues Abertas\n            </span>\n            </li>\n          </ul>\n        </RepositoryInfo>\n      )}\n\n      <RepositoryIssues>\n        {issues.map(\n          issue => (\n            <a\n              key={issue.id}\n              className=\"issue\"\n              href={issue.html_url}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <div className=\"issue__content\">\n                <strong className=\"issue__name\">\n                  {issue.title}\n                </strong>\n                <p className=\"issue__description\">\n                  {issue.user.login}\n                </p>\n              </div>\n              <FiChevronRight size=\"20\" className=\"issue__icon\" />\n            </a>\n          )\n        )}\n      </RepositoryIssues>\n\n    </>\n  )\n}\n\nexport default Repository\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport Dashboard from '../pages/Dashboard'\nimport Repository from '../pages/Repository'\n\nconst Routes = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Dashboard}></Route>\n    <Route path=\"/repositories/:repository+\" component={Repository}></Route>\n  </Switch>\n)\n\nexport default Routes\n","import { createGlobalStyle } from 'styled-components'\nimport appBackground from \"../assets/background.svg\";\n\nconst GlobalStyles = createGlobalStyle`\n  html {\n    font-size: 16px;\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: 'Roboto', sans-serif;\n    color: #3A3A3A;\n    font-size: 100%;\n    background: #f0f0f5 url(${appBackground}) no-repeat 70% top;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    font-family: inherit;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  #root {\n    max-width: 60rem;\n    margin: 0 auto;\n    padding: 4.5rem 1rem 4.5rem 1rem;\n  }\n\n  input {\n    color: inherit;\n  }\n\n  button,input {\n    font-size: 1rem;\n  }\n\n  button {\n    cursor: pointer;\n    border: 0;\n  }\n`\n\nexport default GlobalStyles\n","import React from 'react';\nimport Routes from './routes';\nimport { BrowserRouter } from 'react-router-dom';\nimport GlobalStyles from './styles/global';\n\nconst App: React.FC = () => (\n  <>\n    <GlobalStyles />\n    <BrowserRouter basename={'github-explorer'}>\n      <Routes />\n    </BrowserRouter>\n  </>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}