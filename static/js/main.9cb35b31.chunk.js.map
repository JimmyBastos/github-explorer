{"version":3,"sources":["assets/logo.svg","assets/background.svg","pages/Dashboard/styles.ts","services/api.ts","pages/Dashboard/index.tsx","pages/Repository/index.tsx","routes/index.tsx","styles/global.ts","App.tsx","index.tsx"],"names":["module","exports","Title","styled","h1","SearchForm","form","props","hasError","shade","Repositories","div","Error","api","axios","create","baseURL","Dashboard","useState","errorMessage","setErrorMessage","newRepo","setNewRepo","repositories","setRepositories","event","a","get","repository","data","preventDefault","stopPropagation","src","logoImage","onSubmit","value","onChange","e","target","className","type","placeholder","size","map","key","owner","avatar_url","href","alt","login","full_name","description","Repository","Routes","path","exact","component","GlobalStyles","createGlobalStyle","appBackground","console","log","App","basename","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,gtECOpC,IAAMC,EAAQC,IAAOC,GAAV,KAMLC,EAAaF,IAAOG,KAAV,KAcG,SAAAC,GAAK,OAAIA,EAAMC,SAAW,UAAY,SA6B1CC,YAAM,GAAK,YAMpBC,EAAeP,IAAOQ,IAAV,KAuDZC,EAAQT,IAAOQ,IAAV,K,yBC/GHE,E,OAJHC,EAAMC,OAAO,CACvBC,QAAS,4BCyFIC,EA5Ea,WAAO,IAAD,EACMC,mBAAS,IADf,mBAC3BC,EAD2B,KACbC,EADa,OAEJF,mBAAS,IAFL,mBAE3BG,EAF2B,KAElBC,EAFkB,OAGMJ,mBAAuB,IAH7B,mBAG3BK,EAH2B,KAGbC,EAHa,iDAKhC,WAAmCC,GAAnC,iBAAAC,EAAA,kEAESL,EAFT,uBAGMD,EAAgB,yCAHtB,0CAOqCP,EAAIc,IAAJ,gBAA6BN,IAPlE,gBAOgBO,EAPhB,EAOUC,KAENL,EAAgB,GAAD,mBAAKD,GAAL,CAAmBK,KAElCN,EAAW,IAEXF,EAAgB,IAbpB,kDAgBIA,EAAgB,gBAAD,OAAiBC,EAAjB,wBAhBnB,yBAkBII,EAAMK,iBACNL,EAAMM,kBAnBV,8EALgC,sBA4BhC,OACE,oCACE,yBAAKC,IAAKC,MACV,kBAAC/B,EAAD,4CACA,kBAACG,EAAD,CAAYG,WAAYW,EAAce,SAhCV,6CAiC1B,2BACEC,MAAOd,EACPe,SAAU,SAAAC,GAAC,OAAIf,EAAWe,EAAEC,OAAOH,QACnCI,UAAU,qBACVC,KAAK,OACLC,YAAY,gEAEd,4BAAQF,UAAU,uBAChB,2CACA,kBAAC,IAAD,CAAUG,KAAK,SAIlBvB,GACC,kBAACP,EAAD,KACGO,GAIL,kBAACT,EAAD,KACGa,EAAaoB,KAAI,SAACf,GAAD,OAChB,uBAAGgB,IAAKhB,EAAWiB,MAAMC,WAAYP,UAAU,aAAaQ,KAAK,KAC/D,yBACER,UAAU,oBACVP,IAAKJ,EAAWiB,MAAMC,WACtBE,IAAKpB,EAAWiB,MAAMI,QAExB,yBAAKV,UAAU,uBACb,4BAAQA,UAAU,oBACfX,EAAWsB,WAEd,uBAAGX,UAAU,2BACVX,EAAWuB,cAGhB,kBAAC,IAAD,CAAgBT,KAAK,KAAKH,UAAU,4BC5EjCa,EANc,WAC3B,OACE,6CCSWC,EAPA,kBACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWvC,IACjC,kBAAC,IAAD,CAAOqC,KAAK,cAAcE,UAAWJ,M,+3BCNzC,IAmDeK,EAnDMC,YAAH,IAaYC,KCP9BC,QAAQC,IAHJ,oBAKJ,IASeC,EATO,kBACpB,oCACE,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAeC,SARf,oBASE,kBAAC,EAAD,SCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.9cb35b31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.04f6798f.svg\";","module.exports = __webpack_public_path__ + \"static/media/background.0b819d63.svg\";","import styled, { css } from 'styled-components'\nimport { shade } from 'polished'\n\ninterface SearchFormProps {\n  hasError: boolean\n}\n\nexport const Title = styled.h1`\n  font-size: 3rem;\n  max-width: 32rem;\n  line-height: 3.5rem;\n  margin-top: 5rem;\n`\nexport const SearchForm = styled.form<SearchFormProps>`\n  margin-top: 3.5rem;\n  max-width: 45rem;\n  display: flex;\n  .search-form {\n\n    &__input, &__button {\n      height: 4.5rem;\n    }\n\n    &__input {\n      flex: 1;\n      padding: 0 1.5rem;\n      border-radius: .25rem 0 0 .25rem;\n      border: solid 2px ${props => props.hasError ? '#c53030' : '#fff'};\n      border-right: 0;\n\n\n\n      &:placeholder {\n        color: #a8a8b3\n      }\n    }\n\n    &__button {\n      width: 14rem;\n      color: #fff;\n      background: #04d361;\n      border-radius: 0 .25rem .25rem 0;\n      font-weight: bold;\n\n      display: flex;\n      align-items: center;\n      justify-content: center;\n\n      transition: background-color .2s;\n\n      /* search icon */\n      svg {\n        margin-left: 1rem;\n      }\n\n      &:hover {\n        background: ${shade(0.2, '#04d361')}\n      }\n    }\n  }\n`\n\nexport const Repositories = styled.div`\n\n  a {\n    color: inherit;\n    text-decoration: inherit;\n  }\n\n  .repository {\n    margin-top: 5rem;\n    max-width: 45rem;\n    background: #fff;\n    width: 100%;\n    display: flex;\n    align-items: center;\n    border-radius: .25rem;\n    padding: 1.5rem;\n    transition: transform .2s;\n\n    & + .repository {\n      margin-top: 1rem;\n    }\n\n    &:hover {\n      transform: translateX(.75rem);\n    }\n\n    &__content {\n      flex: 1;\n      margin: 0 1rem;\n    }\n\n    &__image {\n      border-radius: 50%;\n      width: 4rem;\n      height: 4rem;\n      margin-right: 1rem;\n    }\n\n    &__name {\n      font-size: 1.125rem;\n      margin-bottom: 0.25rem;\n      display: block;\n    }\n\n    &__description {\n      color: #a8a8b3;\n    }\n\n    &__icon {\n      margin-left: auto;\n      color: #cbcbd6;\n    }\n  }\n\n`\nexport const Error = styled.div`\n  color: #c53030;\n  margin-top: .25rem;\n  font-size: .75rem;\n`\n","import axios from 'axios'\n\nconst api = axios.create({\n  baseURL: 'https://api.github.com/'\n})\n\nexport default api\n","import React, { useState, useEffect, FormEvent } from 'react';\nimport { FiChevronRight, FiSearch } from 'react-icons/fi';\nimport { Title, SearchForm, Repositories, Error } from './styles';\nimport logoImage from '../../assets/logo.svg'\n\nimport api from '../../services/api'\n\ninterface Repository {\n  full_name: string\n  description: string\n  owner: {\n    login: string\n    avatar_url: string\n  }\n}\n\nconst Dashboard: React.FC = () => {\n  let [errorMessage, setErrorMessage] = useState('')\n  let [newRepo, setNewRepo] = useState('')\n  let [repositories, setRepositories] = useState<Repository[]>([])\n\n  async function handleAddRepository(event: FormEvent<HTMLFormElement>) {\n    try {\n      if (!newRepo) {\n        setErrorMessage('Digite o autor/nome do reposit처rio')\n        return\n      }\n\n      let { data: repository } = await api.get<Repository>(`repos/${newRepo}`)\n\n      setRepositories([...repositories, repository])\n\n      setNewRepo('')\n\n      setErrorMessage('')\n\n    } catch {\n      setErrorMessage(`Repositorio \"${newRepo}\" n찾o encontrado`)\n    } finally {\n      event.preventDefault()\n      event.stopPropagation()\n    }\n  }\n\n  return (\n    <>\n      <img src={logoImage} />\n      <Title> Explore Reposit처rios no Github </Title>\n      <SearchForm hasError={!!errorMessage} onSubmit={handleAddRepository}>\n        <input\n          value={newRepo}\n          onChange={e => setNewRepo(e.target.value)}\n          className=\"search-form__input\"\n          type=\"text\"\n          placeholder=\"Digite aqui nome do reposit처rio no formato autor/nome...\"\n        />\n        <button className=\"search-form__button\">\n          <span>Pesquisar</span>\n          <FiSearch size=\"20\" />\n        </button>\n      </SearchForm>\n\n      {errorMessage &&\n        <Error>\n          {errorMessage}\n        </Error>\n      }\n\n      <Repositories>\n        {repositories.map((repository) => (\n          <a key={repository.owner.avatar_url} className=\"repository\" href=\"#\">\n            <img\n              className=\"repository__image\"\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div className=\"repository__content\">\n              <strong className=\"repository__name\">\n                {repository.full_name}\n              </strong>\n              <p className=\"repository__description\">\n                {repository.description}\n              </p>\n            </div>\n            <FiChevronRight size=\"20\" className=\"repository__icon\" />\n          </a>\n        ))}\n      </Repositories>\n    </>\n  )\n}\n\nexport default Dashboard\n","import React from 'react';\n\nconst Repository: React.FC = () => {\n  return (\n    <h1> Repository </h1>\n  )\n}\n\nexport default Repository\n","import React from 'react'\nimport { Route, Switch } from 'react-router-dom'\n\nimport Dashboard from '../pages/Dashboard'\nimport Repository from '../pages/Repository'\n\nconst Routes = () => (\n  <Switch>\n    <Route path=\"/\" exact component={Dashboard}></Route>\n    <Route path=\"/repository\" component={Repository}></Route>\n  </Switch>\n)\n\nexport default Routes\n","import { createGlobalStyle } from 'styled-components'\nimport appBackground from \"../assets/background.svg\";\n\nconst GlobalStyles = createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');\n\n\n  html {\n    font-size: 16px;\n    box-sizing: border-box;\n  }\n\n  body {\n    font-family: 'Roboto', sans-serif;\n    color: #3A3A3A;\n    font-size: 100%;\n    background: #f0f0f5 url(${appBackground}) no-repeat 70% top;\n  }\n\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    font-family: inherit;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n  }\n\n  #root {\n    max-width: 60rem;\n    margin: 0 auto;\n    padding: 4.5rem 1rem 4.5rem 1rem;\n  }\n\n  input {\n    color: inherit;\n  }\n\n  button,input {\n    font-size: 1rem;\n  }\n\n  button {\n    cursor: pointer;\n    border: 0;\n  }\n`\n\nexport default GlobalStyles\n","import React from 'react';\nimport Routes from './routes';\nimport { BrowserRouter } from 'react-router-dom';\nimport GlobalStyles from './styles/global';\n\nconst routerBaseName = (process.env.NODE_ENV == 'production')\n  ? '/github-explorer'\n  : '/'\n\nconsole.log(routerBaseName);\n\nconst App: React.FC = () => (\n  <>\n    <GlobalStyles />\n    <BrowserRouter basename={routerBaseName}>\n      <Routes />\n    </BrowserRouter>\n  </>\n)\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}